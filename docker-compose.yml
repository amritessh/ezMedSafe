version: '3.8'

services:
  backend:
    build:
      context: ./ezmedsafe-backend-node
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    env_file:
      - ./ezmedsafe-backend-node/.env
    volumes:
      - ./ezmedsafe-backend-node:/app
      - backend_node_modules:/app/node_modules
      # - /app/node_modules
    depends_on:
      - neo4j
      - redis
      - kafka

    command: sh -c "npx prisma migrate deploy && npm start"

  frontend:
    build:
      context: ./ezmedsafe-frontend-react
      dockerfile: Dockerfile
    ports:
      - '80:80'
    env_file:
      - ./ezmedsafe-frontend-react/.env
    volumes:
      - ./ezmedsafe-frontend-react:/app
      - /app/node_modules
    depends_on:
      - backend

  data-prep:
    build:
      context: ./ezmedsafe-data-prep
      dockerfile: Dockerfile
    volumes:
      - ./ezmedsafe-data-prep:/app
    depends_on:
      - backend

  neo4j:
    image: neo4j:5.11.0-community
    container_name: ezmedsafe-neo4j
    ports:
      - '7474:7474'
      - '7687:7687'
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_dbms_connector_http_listen_address=0.0.0.0:7474
      - NEO4J_dbms_connector_bolt_listen_address=0.0.0.0:7687
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    healthcheck:
      test: ['CMD-SHELL', 'wget -q -0 http://localhost:7474/ || exit 1']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7.4.0-alpine
    container_name: ezmedsafe-redis
    ports:
      - '6379:6379'
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 50s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:7.8.0
    container_name: zookeeper
    ports:
      - '2181:2181'
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
  kafka:
    image: confluentinc/cp-kafka:7.8.0
    container_name: kafka
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID:1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME:PLAINTEXT
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR:1
    depends_on:
      - zookeeper

    healthcheck:
      test:
        [
          'CMD-SHELL',
          'kafka-topics --bootstrap-server localhost:9092 --list || exit 1'
        ]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s

  # kafka-ui:
  #   image: obsidiandynamics/kafdrop:2.0.0
  #   container_name: kafka-ui
  #   ports:

volumes:
  neo4j_data:
  neo4j_logs:
  backend_node_modules: # <-- NEW named volume
